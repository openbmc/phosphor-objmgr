{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e051b5fe_1049f641",
        "filename": "libmapper/mapper.c",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-22T18:40:53Z",
      "side": 1,
      "message": "This is kind of silly to do it on the client library side, when nobody really uses this client library, isn\u0027t it?\n\nOr ... is it only useful to do on the client library?\n\nIt seems like we should do this filtering on the server side.  Unless, it is useful to get in some cases but not others?",
      "revId": "05bda1d0c993bf0e70925933184639dc3bdcb1bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f146d2a_89143e69",
        "filename": "libmapper/mapper.c",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-23T00:41:05Z",
      "side": 1,
      "message": "Thanks Patrick.\nI don\u0027t think filtering on the client side is reasonable for two reasons:\n* For the server, we can obtain the service through dbus path and interfaces. For the client, maybe we want to know which service the current path belongs to (at least IEI uses this command very frequently downstream).\n* If possible, I think it is reasonable to return all services. As for why I didn’t do this, it’s because I didn’t want to break the original logic.\n\nIn any case, it is very unreasonable to use this command to return xyz.openbmc_project.ObjectMapper.",
      "parentUuid": "e051b5fe_1049f641",
      "revId": "05bda1d0c993bf0e70925933184639dc3bdcb1bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80b3654d_f1e2e4ca",
        "filename": "libmapper/mapper.c",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-24T19:47:36Z",
      "side": 1,
      "message": "I don\u0027t know how to interpret your response here.  Are you planning to change this code or you think it is right?\n\n\u003e In any case, it is very unreasonable to use this command to return xyz.openbmc_project.ObjectMapper.\n\nIt does this due to associations, right?  I agree it\u0027s probably not what is interesting in most cases, but part of this is just due to extra filtering being done by this `mapper_get_service` function.  Probably better to avoid using that?",
      "parentUuid": "3f146d2a_89143e69",
      "revId": "05bda1d0c993bf0e70925933184639dc3bdcb1bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb644d5c_85cb13c3",
        "filename": "libmapper/mapper.c",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-25T01:12:12Z",
      "side": 1,
      "message": "\u003e I don\u0027t know how to interpret your response here.  Are you planning to change this code or you think it is right?\n\n1. Without breaking the original logic, I think it is correct to filter out `xyz.openbmc_project.ObjectMapper`.\n2. Otherwise we could return all service names, but this would require refactoring everywhere `mapper_get_service` is used.\n\nI prefer the first way and would like to hear your suggestions.",
      "parentUuid": "80b3654d_f1e2e4ca",
      "revId": "05bda1d0c993bf0e70925933184639dc3bdcb1bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53b5343d_69a96caa",
        "filename": "libmapper/mapper.c",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-01-25T14:36:11Z",
      "side": 1,
      "message": "If associations had been invented when this get-service API was created, I suspect either a) it would have done the same change as in this commit, or b) it would have been shot down as a bad idea since assuming a path has one service is wrong.",
      "parentUuid": "fb644d5c_85cb13c3",
      "revId": "05bda1d0c993bf0e70925933184639dc3bdcb1bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2cc529b_4b762f04",
        "filename": "libmapper/mapper.c",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-25T15:59:56Z",
      "side": 1,
      "message": "It looks like the only use of this function in the whole codebase is in phosphor-host-ipmid.  Should we just fix it there to use the mapper calls directly?\n\nI guess I don\u0027t really care one way or the other if this change goes in.  It just seemed odd to do filtering on the client side when we\u0027re in the mapper library.  You\u0027d think that if it was important for mapper there would be server-side work for it.",
      "parentUuid": "53b5343d_69a96caa",
      "revId": "05bda1d0c993bf0e70925933184639dc3bdcb1bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e5d9da1_4b5f4992",
        "filename": "libmapper/mapper.c",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-01-25T16:15:05Z",
      "side": 1,
      "message": "Trying a few of the sensors on my system, it looks like it\u0027s just alphabetical.  VirtualSensor comes after ObjectMapper, so it returns ObjectMapper.  But ObjectMapper comes after ADCSensor, so for that one I do get ADCSensor.\n\nThose paths in the mapper don\u0027t actually have any interfaces on them, it\u0027s just that it\u0027s a subpath of an association path that does.\n\nSo maybe then yea it would be better to change the server to not return objects that only have the 3 default freedesktop interfaces?",
      "parentUuid": "f2cc529b_4b762f04",
      "revId": "05bda1d0c993bf0e70925933184639dc3bdcb1bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "102c9481_6ab0e8d7",
        "filename": "libmapper/mapper.c",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-26T00:33:58Z",
      "side": 1,
      "message": "So can we have the client return all service names instead of just the first one, and then do some minor refactoring in phosphor-host-ipmid?\n@Patrick @Matt",
      "parentUuid": "5e5d9da1_4b5f4992",
      "revId": "05bda1d0c993bf0e70925933184639dc3bdcb1bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b50e228_c8d04eaa",
        "filename": "libmapper/mapper.c",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-01-26T14:12:16Z",
      "side": 1,
      "message": "Why can\u0027t that code just call GetObject instead?",
      "parentUuid": "102c9481_6ab0e8d7",
      "revId": "05bda1d0c993bf0e70925933184639dc3bdcb1bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa0e4776_183980e8",
        "filename": "libmapper/mapper.c",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-29T00:25:07Z",
      "side": 1,
      "message": "\u003e Why can\u0027t that code just call GetObject instead?\n\nBecause I don\u0027t know what the original design intention was? I don\u0027t want to break the existing logic, I just want to get the correct service name through the object path",
      "parentUuid": "8b50e228_c8d04eaa",
      "revId": "05bda1d0c993bf0e70925933184639dc3bdcb1bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fe9bf92_62ccddd5",
        "filename": "libmapper/mapper.c",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-29T12:47:48Z",
      "side": 1,
      "message": "I\u0027m not especially satisfied with that response.  It isn\u0027t like the code we\u0027re talking about is especially complex and you seem to already understand the \"fix\".\n\nThe only call to this code is in sensorhandler.cpp as just a trivial redirection:\n```\nint get_bus_for_path(const char* path, char** busname)\n{\n    return mapper_get_service(bus, path, busname);\n}\n```\n\nThe interesting code is where this is called from, which is in `find_openbmc_path`:\n\n    rc \u003d get_bus_for_path(info.sensorPath.c_str(), \u0026busname);\n\nThere is a full path to a sensor that they\u0027re looking for an object at that path.  Isn\u0027t this exactly what GetObject is for?",
      "parentUuid": "aa0e4776_183980e8",
      "revId": "05bda1d0c993bf0e70925933184639dc3bdcb1bc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}