{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0a47187d_b35908f5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-23T16:55:54Z",
      "side": 1,
      "message": "As written, this is going to have LOTS of user-facing impacts if the mapper is no longer considered \"reliable\".  Doing this would mean that we need to add retries in every daemon (like bmcweb), which seems like a lot of complexity that I don\u0027t really want in those daemons.\n\nAs an alternative, what if the interfaces to be added were just added to the InProgressIntrospect object, then when that operation is completed, they would all be added to the global at one time, which I think would avoid your race condition?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 13
      },
      "revId": "c804bff683b9ad7fd9743a638a94bc69ce5701f1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fb5a441_55548110",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-05-25T08:22:07Z",
      "side": 1,
      "message": "\u003e As written, this is going to have LOTS of user-facing impacts if the mapper is no longer considered \"reliable\". \n\nThis is true. I tried to add this logic in `GetSubTree` method and I did observe services like bmcweb get such exception during BMC startup.\nThat\u0027s why I only add this logic in `GetSubTreePaths` for now.\n\n\u003e As an alternative, what if the interfaces to be added were just added to the InProgressIntrospect object, then when that operation is completed, they would all be added to the global at one time, which I think would avoid your race condition?\n\nI guess this is the pretty much the same as this patch. When it\u0027s in InProgressIntrospect and not available to the `GetSubTreePaths`, it will throw because getSubTreePaths() throws when there is no resource.\n\nAlternatively, could we make getSubTree/Paths() not throw, and only return empty result when the resource is not available?",
      "parentUuid": "0a47187d_b35908f5",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 13
      },
      "revId": "c804bff683b9ad7fd9743a638a94bc69ce5701f1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bf276b0_1530f34a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-05-26T13:45:14Z",
      "side": 1,
      "message": "I like the idea of just returning an empty result when in progress, which is what would be returned anyway if you called before the introspect started.",
      "parentUuid": "2fb5a441_55548110",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 13
      },
      "revId": "c804bff683b9ad7fd9743a638a94bc69ce5701f1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98500743_0735b75e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-26T18:24:39Z",
      "side": 1,
      "message": "\u003e That\u0027s why I only add this logic in `GetSubTreePaths` for now.\n\nbmcweb uses GetSubTreePaths as well, so this doesn\u0027t really solve the issue.  FWIW, we need a solution that works for all the mapper methods.\n\n\n\u003e When it\u0027s in InProgressIntrospect and not available to the `GetSubTreePaths`, it will throw because getSubTreePaths() throws when there is no resource.\n\nIMO, it\u0027s very different.  \"This element doesn\u0027t exist yet\" is an error that every implementation already has to handle, because the system might not have that device/path, and in general, doesn\u0027t need to be retried.  \"Can\u0027t give a correct result yet\" errors arguably need to be retried.\n\n\u003e I like the idea of just returning an empty result when in progress,\n\nI think we\u0027re saying the same thing, but we shouldn\u0027t return an EMPTY result, we should just omit the one service being introspected.  Ideally we\u0027d do this by atomically adding all the paths in one shot, when the last handler calls back, instead of adding them as the results come in.  We do this pattern in other contexts like dbus-sensors (admittedly with a timer, but same idea).",
      "parentUuid": "1bf276b0_1530f34a",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 13
      },
      "revId": "c804bff683b9ad7fd9743a638a94bc69ce5701f1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca8e5ec4_bef13891",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-05-26T19:33:26Z",
      "side": 1,
      "message": "\u003e I think we\u0027re saying the same thing, but we shouldn\u0027t return an EMPTY result, we should just omit the one service being introspected.  Ideally we\u0027d do this by atomically adding all the paths in one shot, when the last handler calls back, instead of adding them as the results come in.  We do this pattern in other contexts like dbus-sensors (admittedly with a timer, but same idea).\n\nsounds good to me.",
      "parentUuid": "98500743_0735b75e",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 13
      },
      "revId": "c804bff683b9ad7fd9743a638a94bc69ce5701f1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "768defd0_eb055032",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-23T16:55:54Z",
      "side": 1,
      "message": "This is going to force EVERY daemon in openbmc to add retry code for any mapper call.  In terms of complexity, I suspect that\u0027s not what we want.",
      "range": {
        "startLine": 17,
        "startChar": 11,
        "endLine": 17,
        "endChar": 47
      },
      "revId": "c804bff683b9ad7fd9743a638a94bc69ce5701f1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b4b07c6_70b7b303",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-05-25T08:22:07Z",
      "side": 1,
      "message": "@Ed Possibly let\u0027s discuss the issue in the mailing list to get an agreed solution, and go back to this gerrit to update the code.",
      "revId": "c804bff683b9ad7fd9743a638a94bc69ce5701f1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a39a415_ad90aab7",
        "filename": "src/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-23T21:48:46Z",
      "side": 1,
      "message": "I don\u0027t think this can be a set.  In theory, a process can be in introspect multiple times.",
      "range": {
        "startLine": 27,
        "startChar": 12,
        "endLine": 27,
        "endChar": 15
      },
      "revId": "c804bff683b9ad7fd9743a638a94bc69ce5701f1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33e2b4d9_0844577b",
        "filename": "src/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-05-25T08:22:07Z",
      "side": 1,
      "message": "OK, we could use unordered_multiset\u0027s insert() and extract() instead.",
      "parentUuid": "4a39a415_ad90aab7",
      "range": {
        "startLine": 27,
        "startChar": 12,
        "endLine": 27,
        "endChar": 15
      },
      "revId": "c804bff683b9ad7fd9743a638a94bc69ce5701f1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}