{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7a8340b0_17a07548",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-10-30T18:46:59Z",
      "side": 1,
      "message": "This feels similar to https://lore.kernel.org/openbmc/CAGm54UE4SXfY30oUrr9vVa+\u003dj_Ra971A7ZcBMyMN2TgTaXN8+w@mail.gmail.com/T/#u",
      "revId": "385d3f6b7a4f2dbad526d41c9551dbe13e83130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7465d48_6d4941dc",
        "filename": "src/processing.cpp",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-10-30T18:52:16Z",
      "side": 1,
      "message": "We don\u0027t want to skip xyz.openbmc_project.ObjectMapper as a service when it is the one hosting the associations.",
      "revId": "385d3f6b7a4f2dbad526d41c9551dbe13e83130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2a848ee_664f892c",
        "filename": "src/processing.cpp",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-10-31T00:37:24Z",
      "side": 1,
      "message": "so you mean that xyz.openbmc_project.ObjectMapper needs to be filtered when calling `GetObject`?",
      "parentUuid": "b7465d48_6d4941dc",
      "revId": "385d3f6b7a4f2dbad526d41c9551dbe13e83130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8b78ee3_80b70d28",
        "filename": "src/processing.cpp",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-11-01T13:37:06Z",
      "side": 1,
      "message": "xyz.openbmc_project.ObjectMapper is a valid interface on the actual association interfaces so will still need to be returned.  like inventory/chassis/all_sensors is a dbus path that is only hosted by the mapper so people need to be able to get that info.\n\nBut the parent path, inventory/chassis would not need that interface returned.",
      "parentUuid": "b2a848ee_664f892c",
      "revId": "385d3f6b7a4f2dbad526d41c9551dbe13e83130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}