{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7925fe93_0c539ccb",
        "filename": "src/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 559,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-07-08T14:24:35Z",
      "side": 1,
      "message": "Could this be done somehow so reqPath doesn\u0027t have the / removed and then added again, especially since reqPathStripped exists to hold the stripped version?",
      "revId": "54e091068092706a99d6d4df09ebbcad53e368bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b226368_0df2ed94",
        "filename": "src/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 559,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-07-08T16:18:08Z",
      "side": 1,
      "message": "I\u0027ve given it a few thoughts but I think this is actually the cleanest + most space efficient way (even though I agree it looks ugly) - the reason being, we don\u0027t know whether reqPath has a trailing \"/\" or not to begin with so we need to:\n1. Strip it and keep a version of it\n2. Add a trailing \"/\" and keep a version of it\n\nBy making a string_view of the stripped version of reqPath after Step#1, the string_view satisfies Step#1 and only requires space of const char*, and the size to the string. reqPath is now guaranteed to be stripped any trailing \"/\" at this point.\n\nFrom here if we add a trailing \"/\", reqPath is now reused to satisfy Step#2.\n\nWhat do you think?",
      "parentUuid": "7925fe93_0c539ccb",
      "revId": "54e091068092706a99d6d4df09ebbcad53e368bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87101842_93cbd81e",
        "filename": "src/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 559,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-08T16:22:26Z",
      "side": 1,
      "message": "+1.\n\nI think we can do something like\n\n\nif (!boost::ends_with(reqPath, \"/\"){\n   reqPath +\u003d \u0027/\u0027;\n}\nstd::string_view reqPathStripped \u003d reqPath.remove_suffix(1);",
      "parentUuid": "7925fe93_0c539ccb",
      "revId": "54e091068092706a99d6d4df09ebbcad53e368bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e3f35cd_4f224064",
        "filename": "src/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 559,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-07-08T16:36:30Z",
      "side": 1,
      "message": "Oh yeah that works too (flipping the logic I explained, and satisfying \"step #1\" by stripping it with string_view) - I think instead of actually doing a remove_suffix (which I think affects reqPath), we should set the string_view window to be 1 off of the size of string. That saves 1 pop_back command.",
      "parentUuid": "87101842_93cbd81e",
      "revId": "54e091068092706a99d6d4df09ebbcad53e368bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4096d84_698389e7",
        "filename": "src/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 561,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-07-08T15:53:29Z",
      "side": 1,
      "message": "I don\u0027t understand why this line was moved.",
      "revId": "54e091068092706a99d6d4df09ebbcad53e368bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a32179b_f1dd2fa5",
        "filename": "src/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 561,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-07-08T16:18:08Z",
      "side": 1,
      "message": "This was copied from getAncestors - I think it\u0027s better practice to declare variables closer to where it\u0027s going to be used since we wouldn\u0027t have needed ret if we error out early.",
      "parentUuid": "e4096d84_698389e7",
      "revId": "54e091068092706a99d6d4df09ebbcad53e368bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8835e0c5_6a04e740",
        "filename": "src/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 561,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-08T16:22:26Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "e4096d84_698389e7",
      "revId": "54e091068092706a99d6d4df09ebbcad53e368bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb030c71_c101daa5",
        "filename": "src/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 561,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-07-08T16:26:23Z",
      "side": 1,
      "message": "\u003e  copied from getAncestors - I think it\u0027s better practice to declare variables closer \n\nAh, now that you say it, it makes perfect sense and I completely agree.  Next time you can avoid the back and forth by putting a change like that in its own commit, and add the words you just typed to the commit message.  Thanks.",
      "parentUuid": "8835e0c5_6a04e740",
      "revId": "54e091068092706a99d6d4df09ebbcad53e368bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "495812ea_ec5393f4",
        "filename": "src/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 567,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-08T16:22:26Z",
      "side": 1,
      "message": "Isn\u0027t this incorrect?  I thought that a getSubTree call was supposed to return the parent object as well?",
      "range": {
        "startLine": 567,
        "startChar": 12,
        "endLine": 567,
        "endChar": 40
      },
      "revId": "54e091068092706a99d6d4df09ebbcad53e368bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95b65be8_3b2ef36d",
        "filename": "src/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 567,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-07-08T16:36:30Z",
      "side": 1,
      "message": "This is the same pattern as before - is this a regression and should we remove this check for getSubTree (but keep it for getSubTreePath)?",
      "parentUuid": "495812ea_ec5393f4",
      "range": {
        "startLine": 567,
        "startChar": 12,
        "endLine": 567,
        "endChar": 40
      },
      "revId": "54e091068092706a99d6d4df09ebbcad53e368bb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}